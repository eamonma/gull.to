name: CI & Staging Deploy

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build-test-deploy-staging:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install
        run: npm ci
      - name: ETL build
        run: npm run etl
      - name: Tests
        run: npm test
      - name: Derive versions
        id: versions
        run: |
          echo "GULL_WORKER_VERSION=v$(node -p "require('./package.json').version")" >> $GITHUB_ENV
          # Use --silent so only the KEY=VALUE line is emitted (no npm prefix) then append directly
          npm run --silent map:version >> $GITHUB_ENV
      - name: Publish to staging
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          GULL_WORKER_VERSION: ${{ env.GULL_WORKER_VERSION }}
          GULL_MAP_VERSION: ${{ env.GULL_MAP_VERSION }}
        run: |
          GULL_WORKER_VERSION=${{ env.GULL_WORKER_VERSION }} GULL_MAP_VERSION=${{ env.GULL_MAP_VERSION }} npm run deploy:staging
      - name: Synthetic checks (staging)
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        run: npm run synthetic:staging
